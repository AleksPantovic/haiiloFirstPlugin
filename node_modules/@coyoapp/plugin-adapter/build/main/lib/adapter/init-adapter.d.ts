import { JwkStore } from '../jwt/jwk-store';
import { JwtClaims } from '../jwt/jwt-claims';
import { JwtHandler } from '../jwt/jwt-handler';
/**
 * Service class to initialize a plug-in and retrieve initialization response
 * information.
 */
export declare class InitAdapter {
    private readonly srcId;
    private static readonly REQ_SUBJECT;
    private static readonly RES_SUBJECT;
    protected jwkStore: JwkStore;
    protected jwtHandler: JwtHandler;
    /**
     * Creates a new instance of this class.
     *
     * @param srcId the plug-in source ID to use for requests
     * @returns the new instance
     */
    constructor(srcId: string);
    /**
     * Sends an initialization message to the parent window (i.e. COYO)
     * and retrieves the response.
     *
     * @param timeout a maximum time to wait for the response
     * @param validate a flag indicating if the JWT response should be validated
     * @returns a promise holding the decoded (and possibly validated) JWT claims
     */
    send(timeout: number, validate: boolean): Promise<[JwtClaims, string]>;
}
