"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jest_createspyobj_1 = require("jest-createspyobj");
const utils_1 = require("ts-jest/utils");
const config_adapter_1 = require("./adapter/config-adapter");
const height_adapter_1 = require("./adapter/height-adapter");
const init_adapter_1 = require("./adapter/init-adapter");
const jwk_defaults_1 = require("./jwt/jwk-defaults");
const jwk_store_1 = require("./jwt/jwk-store");
const plugin_adapter_1 = require("./plugin-adapter");
jest.mock('./jwt/jwk-store');
jest.mock('./adapter/init-adapter');
jest.mock('./adapter/config-adapter');
jest.mock('./adapter/height-adapter');
describe('PluginAdapter', () => {
    let windowSpy;
    let jwkStoreMock;
    let initAdapterMock;
    let configAdapterMock;
    let heightAdapterMock;
    let pluginAdapter;
    beforeEach(() => {
        windowSpy = jest.spyOn(window, 'window', 'get');
        utils_1.mocked(jwk_store_1.JwkStore).getInstance.mockImplementation(() => jwkStoreMock);
        jwkStoreMock = jest_createspyobj_1.createSpyObj(jwk_store_1.JwkStore);
        utils_1.mocked(init_adapter_1.InitAdapter).mockImplementation(() => initAdapterMock);
        initAdapterMock = jest_createspyobj_1.createSpyObj(init_adapter_1.InitAdapter);
        utils_1.mocked(config_adapter_1.ConfigAdapter).mockImplementation(() => configAdapterMock);
        configAdapterMock = jest_createspyobj_1.createSpyObj(config_adapter_1.ConfigAdapter);
        utils_1.mocked(height_adapter_1.HeightAdapter).mockImplementation(() => heightAdapterMock);
        heightAdapterMock = jest_createspyobj_1.createSpyObj(height_adapter_1.HeightAdapter);
        pluginAdapter = new plugin_adapter_1.PluginAdapter('srcId');
    });
    afterEach(() => {
        windowSpy.mockRestore();
    });
    test('should use the given src ID', () => {
        expect(pluginAdapter.srcId).toBe('srcId');
    });
    test('should use the query src ID', () => {
        windowSpy.mockImplementation(() => ({
            location: {
                href: 'https://example.com?src=querySrcId'
            }
        }));
        pluginAdapter = new plugin_adapter_1.PluginAdapter();
        expect(pluginAdapter.srcId).toBe('querySrcId');
    });
    test('should fallback without any src ID', () => {
        pluginAdapter = new plugin_adapter_1.PluginAdapter();
        expect(pluginAdapter.srcId).toBe('');
    });
    test('should register hosts', () => {
        expect(jwkStoreMock.addHost.mock.calls).toContainEqual(['https://certificates.plugins.coyoapp.com']);
    });
    test('should register keys', () => {
        expect(jwkStoreMock.addJwk.mock.calls).toContainEqual([jwk_defaults_1.JWK_STAGE_RGX, jwk_defaults_1.JWK_STAGE, jwk_defaults_1.JWK_STAGE_NEW]);
        expect(jwkStoreMock.addJwk.mock.calls).toContainEqual([jwk_defaults_1.JWK_PROD_RGX, jwk_defaults_1.JWK_PROD, jwk_defaults_1.JWK_PROD_NEW]);
    });
    test('should init', () => {
        const claims = {
            sub: 'subject',
            'ctx.userId': 'userID',
            'cfg.text': 'Hello World',
            'cfg.bool': true,
            'stt.edit': false
        };
        const token = 'token';
        initAdapterMock.send.mockReturnValueOnce(Promise.resolve([claims, token]));
        const result = pluginAdapter.init();
        return result.then(v => {
            expect(initAdapterMock.send).toBeCalledWith(60000, true);
            expect(v).toStrictEqual({
                claims: {
                    cfg: {
                        bool: true,
                        text: 'Hello World'
                    },
                    ctx: {
                        userId: 'userID'
                    },
                    stt: {
                        edit: false
                    },
                    sub: 'subject'
                },
                token: 'token',
                validated: true
            });
        });
    });
    test('should connect to config adapter', () => {
        const cb = () => {
            /* empty */
        };
        const result = pluginAdapter.onSave(cb);
        expect(configAdapterMock.connect).toHaveBeenCalledWith(cb, true);
        result();
        expect(configAdapterMock.disconnect).toHaveBeenCalled();
    });
    test('should connect to height adapter', () => {
        const result = pluginAdapter.observeHeight();
        expect(heightAdapterMock.connect).toHaveBeenCalledWith('html', 50);
        result();
        expect(heightAdapterMock.disconnect).toHaveBeenCalled();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLWFkYXB0ZXIuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvcGx1Z2luLWFkYXB0ZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUFpRDtBQUNqRCx5Q0FBdUM7QUFFdkMsNkRBQXlEO0FBQ3pELDZEQUF5RDtBQUN6RCx5REFBcUQ7QUFDckQscURBQW1IO0FBQ25ILCtDQUEyQztBQUMzQyxxREFBaUQ7QUFFakQsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQzdCLElBQUksQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBRXRDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFO0lBQzdCLElBQUksU0FBbUMsQ0FBQztJQUN4QyxJQUFJLFlBQW1DLENBQUM7SUFDeEMsSUFBSSxlQUF5QyxDQUFDO0lBQzlDLElBQUksaUJBQTZDLENBQUM7SUFDbEQsSUFBSSxpQkFBNkMsQ0FBQztJQUNsRCxJQUFJLGFBQTRCLENBQUM7SUFFakMsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNkLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFaEQsY0FBTSxDQUFDLG9CQUFRLENBQUMsQ0FBQyxXQUFXLENBQUMsa0JBQWtCLENBQUMsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEUsWUFBWSxHQUFHLGdDQUFZLENBQUMsb0JBQVEsQ0FBQyxDQUFDO1FBQ3RDLGNBQU0sQ0FBQywwQkFBVyxDQUFDLENBQUMsa0JBQWtCLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDOUQsZUFBZSxHQUFHLGdDQUFZLENBQUMsMEJBQVcsQ0FBQyxDQUFDO1FBQzVDLGNBQU0sQ0FBQyw4QkFBYSxDQUFDLENBQUMsa0JBQWtCLENBQUMsR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNsRSxpQkFBaUIsR0FBRyxnQ0FBWSxDQUFDLDhCQUFhLENBQUMsQ0FBQztRQUNoRCxjQUFNLENBQUMsOEJBQWEsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDbEUsaUJBQWlCLEdBQUcsZ0NBQVksQ0FBQyw4QkFBYSxDQUFDLENBQUM7UUFFaEQsYUFBYSxHQUFHLElBQUksOEJBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDLENBQUMsQ0FBQztJQUVILFNBQVMsQ0FBQyxHQUFHLEVBQUU7UUFDYixTQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsRUFBRTtRQUN2QyxTQUFTLENBQUMsa0JBQWtCLENBQzFCLEdBQUcsRUFBRSxDQUNILENBQUM7WUFDQyxRQUFRLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLG9DQUFvQzthQUMzQztTQUNNLENBQUEsQ0FDWixDQUFDO1FBRUYsYUFBYSxHQUFHLElBQUksOEJBQWEsRUFBRSxDQUFDO1FBRXBDLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2pELENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLG9DQUFvQyxFQUFFLEdBQUcsRUFBRTtRQUM5QyxhQUFhLEdBQUcsSUFBSSw4QkFBYSxFQUFFLENBQUM7UUFFcEMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxFQUFFO1FBQ2pDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDLENBQUM7SUFDdkcsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO1FBQ2hDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyw0QkFBYSxFQUFFLHdCQUFTLEVBQUUsNEJBQWEsQ0FBQyxDQUFDLENBQUM7UUFDakcsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLDJCQUFZLEVBQUUsdUJBQVEsRUFBRSwyQkFBWSxDQUFDLENBQUMsQ0FBQztJQUNoRyxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLE1BQU0sTUFBTSxHQUFHO1lBQ2IsR0FBRyxFQUFFLFNBQVM7WUFDZCxZQUFZLEVBQUUsUUFBUTtZQUN0QixVQUFVLEVBQUUsYUFBYTtZQUN6QixVQUFVLEVBQUUsSUFBSTtZQUNoQixVQUFVLEVBQUUsS0FBSztTQUNsQixDQUFDO1FBQ0YsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDO1FBQ3RCLGVBQWUsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFM0UsTUFBTSxNQUFNLEdBQUcsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRXBDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNyQixNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDekQsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQztnQkFDdEIsTUFBTSxFQUFFO29CQUNOLEdBQUcsRUFBRTt3QkFDSCxJQUFJLEVBQUUsSUFBSTt3QkFDVixJQUFJLEVBQUUsYUFBYTtxQkFDcEI7b0JBQ0QsR0FBRyxFQUFFO3dCQUNILE1BQU0sRUFBRSxRQUFRO3FCQUNqQjtvQkFDRCxHQUFHLEVBQUU7d0JBQ0gsSUFBSSxFQUFFLEtBQUs7cUJBQ1o7b0JBQ0QsR0FBRyxFQUFFLFNBQVM7aUJBQ2Y7Z0JBQ0QsS0FBSyxFQUFFLE9BQU87Z0JBQ2QsU0FBUyxFQUFFLElBQUk7YUFDaEIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxrQ0FBa0MsRUFBRSxHQUFHLEVBQUU7UUFDNUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxFQUFFO1lBQ2QsV0FBVztRQUNiLENBQUMsQ0FBQztRQUNGLE1BQU0sTUFBTSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFeEMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLG9CQUFvQixDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVqRSxNQUFNLEVBQUUsQ0FBQztRQUVULE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLGtDQUFrQyxFQUFFLEdBQUcsRUFBRTtRQUM1QyxNQUFNLE1BQU0sR0FBRyxhQUFhLENBQUMsYUFBYSxFQUFFLENBQUM7UUFFN0MsTUFBTSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLG9CQUFvQixDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVuRSxNQUFNLEVBQUUsQ0FBQztRQUVULE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMifQ==