/**
 * A list of error codes for plug-in related errors.
 */
export declare enum PluginErrorCode {
    /**
     * The SubtleCrypto interface of the Web Crypto API is not available.
     */
    CryptoNotFound = 0,
    /**
     * No CryptoKey could be found for the corresponding environment URL in the JWK store.
     */
    CryptoKeyNotFound = 1,
    /**
     * The token signature is invalid.
     */
    InvalidTokenSignature = 2,
    /**
     * A token claim is invalid.
     */
    InvalidTokenClaim = 3,
    /**
     * The token is expired.
     */
    InvalidTokenExp = 4,
    /**
     * The token is premature.
     */
    InvalidTokenNbf = 5,
    /**
     * The message request timed out.
     */
    MessageTimeout = 6,
    /**
     * No CryptoKey could be found at the given URL.
     */
    CryptoKeyNotFoundRemote = 7,
    /**
     * URL for CryptoKey not trusted.
     */
    CryptoKeyNotTrusted = 8
}
/**
 * A plug-in related error thrown in the context of this adapter.
 */
export declare class PluginError extends Error {
    readonly code: PluginErrorCode;
    readonly recover: boolean;
    /**
     * Creates a new instance of this class.
     *
     * @param code the error code
     * @param message the error message
     * @param recover whether the app can recover from the error
     * @returns the new instance
     */
    constructor(code: PluginErrorCode, message: string, recover?: boolean);
}
