import { ConfigAdapter } from './adapter/config-adapter';
import { HeightAdapter } from './adapter/height-adapter';
import { InitAdapter } from './adapter/init-adapter';
import { JWK_PROD, JWK_PROD_NEW, JWK_PROD_RGX, JWK_STAGE, JWK_STAGE_NEW, JWK_STAGE_RGX } from './jwt/jwk-defaults';
import { JwkStore } from './jwt/jwk-store';
import { nest } from './utils/nest';
/**
 * The main service class to be used by a plug-in to establish a safe and secure
 * communication to the COYO front end bridge. It acts as a unified interaction
 * interface to all other plug-in handlers.
 */
export class PluginAdapter {
    /**
     * Creates a new instance of this class.
     *
     * @param srcId the plug-in source ID to use for requests
     * @returns the new instance
     */
    constructor(srcId) {
        this.srcId = srcId || new URL(window.location.href).searchParams.get('src') || '';
        this.jwkStore = JwkStore.getInstance();
        this.initAdapter = new InitAdapter(this.srcId);
        this.initConfigAdapter = new InitAdapter(this.srcId + PluginAdapter.CONFIG_SRC_SUFFIX);
        this.heightAdapter = new HeightAdapter(this.srcId);
        this.heightConfigAdapter = new HeightAdapter(this.srcId + PluginAdapter.CONFIG_SRC_SUFFIX);
        this.configAdapter = new ConfigAdapter(this.srcId + PluginAdapter.CONFIG_SRC_SUFFIX);
        this.jwkStore.addHost('https://certificates.plugins.coyoapp.com');
        this.jwkStore.addJwk(JWK_STAGE_RGX, JWK_STAGE, JWK_STAGE_NEW);
        this.jwkStore.addJwk(JWK_PROD_RGX, JWK_PROD, JWK_PROD_NEW);
    }
    /**
     * Sends an initialization message to the parent window (i.e. COYO)
     * and retrieves the decoded (and possibly validated) response as well as the
     * raw token response.
     *
     * @param config a flag indicating if the plugin configuration view should be initialized
     * @param timeout a maximum time to wait for the response
     * @param validate a flag indicating if the JWT response should be validated
     * @returns a promise holding the response data
     */
    init(config = false, timeout = 60000, validate = true) {
        const adapter = config ? this.initConfigAdapter : this.initAdapter;
        return adapter.send(timeout, validate).then(([claims, token]) => {
            if (config) {
                this.configAdapter.bind(claims['ctx.userId']);
            }
            return { claims: nest(claims), token, validated: validate };
        });
    }
    /**
     * Starts to listen to COYO requests to save the current configuration.
     * Provides a `respond` callback that is used to respond to the received
     * message. The response can be `true` to indicate success without providing
     * any data, `false` to indicate failure (e.g. an invalid configuration state)
     * or a JSON object holding the configuration values to be stored on COYO
     * side.
     *
     * @param cb a callback that is executed every time a save request is received
     * @param validate a flag indicating if the JWT response should be validated
     * @returns a disconnect handler to stop listening to save events
     */
    onSave(cb, validate = true) {
        this.configAdapter.connect(cb, validate);
        return () => this.configAdapter.disconnect();
    }
    /**
     * Starts to observe the HTML element that matches the given selectors and
     * sends throttled update messages to COYO.
     *
     * @param config a flag indicating if the plugin configuration view should be observed
     * @param selectors the selectors to target the HTML element
     * @returns a disconnect handler to stop observing the HTML element
     */
    observeHeight(config = false, selectors = 'html') {
        const adapter = config ? this.heightConfigAdapter : this.heightAdapter;
        adapter.connect(selectors, 50);
        return () => adapter.disconnect();
    }
}
PluginAdapter.CONFIG_SRC_SUFFIX = '-cfg';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLWFkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3BsdWdpbi1hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUczQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXBDOzs7O0dBSUc7QUFDSCxNQUFNLE9BQU8sYUFBYTtJQVd4Qjs7Ozs7T0FLRztJQUNILFlBQVksS0FBYztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2xGLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxhQUFhLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUVyRixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO1FBRWxFLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRUQ7Ozs7Ozs7OztPQVNHO0lBQ0gsSUFBSSxDQUNGLE1BQU0sR0FBRyxLQUFLLEVBQ2QsT0FBTyxHQUFHLEtBQUssRUFDZixRQUFRLEdBQUcsSUFBSTtRQU1mLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ25FLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRTtZQUM5RCxJQUFJLE1BQU0sRUFBRTtnQkFDVixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzthQUMvQztZQUNELE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLENBQUM7UUFDOUQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7Ozs7Ozs7O09BV0c7SUFDSCxNQUFNLENBQUMsRUFBMEUsRUFBRSxRQUFRLEdBQUcsSUFBSTtRQUNoRyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQy9DLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsYUFBYSxDQUFDLE1BQU0sR0FBRyxLQUFLLEVBQUUsU0FBUyxHQUFHLE1BQU07UUFDOUMsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDdkUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDL0IsT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDcEMsQ0FBQzs7QUF4RnVCLCtCQUFpQixHQUFXLE1BQU0sQ0FBQyJ9